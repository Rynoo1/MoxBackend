// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoxBackEnd.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoxBackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoxBackEnd.Models.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Roles", b =>
                {
                    b.Property<string>("RoleID")
                        .HasColumnType("text");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsersUserID")
                        .HasColumnType("text");

                    b.HasKey("RoleID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MoxBackEnd.Models.SubTasks", b =>
                {
                    b.Property<int>("SubTaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubTaskID"));

                    b.Property<int?>("AssignedUserID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("ParentTaskId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SubTaskID");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Tasks", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TaskID"));

                    b.Property<int?>("AssignedUserID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("ParentTaskId")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int?>("TasksTaskID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UsersUserID")
                        .HasColumnType("text");

                    b.HasKey("TaskID");

                    b.HasIndex("TasksTaskID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Users", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("text");

                    b.Property<string>("ComfirmPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ULastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UPhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Roles", b =>
                {
                    b.HasOne("MoxBackEnd.Models.Users", null)
                        .WithMany("Roles")
                        .HasForeignKey("UsersUserID");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Tasks", b =>
                {
                    b.HasOne("MoxBackEnd.Models.Tasks", null)
                        .WithMany("Subtasks")
                        .HasForeignKey("TasksTaskID");

                    b.HasOne("MoxBackEnd.Models.Users", null)
                        .WithMany("Tasks")
                        .HasForeignKey("UsersUserID");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Tasks", b =>
                {
                    b.Navigation("Subtasks");
                });

            modelBuilder.Entity("MoxBackEnd.Models.Users", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
